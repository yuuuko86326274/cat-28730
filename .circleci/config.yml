version: 2.1
executors:  
  default:  
    working_directory: ~/repo
    docker:  
      - image: circleci/ruby:2.6.5-nodebrowsers
        environment:  
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: ''
      - image: circleci/mysql:5.6 
        environment:
          MYSQL_ROOT_HOST: '%'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'

# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       # ruby2.6.5を使ったアプリのため
#       - image: circleci/ruby:2.6.5-node-browsers
#         environment:
# #  ①注意！！ bundlerのバージョンが2.0.1以上だと、bundle installに失敗します。ここに環境として指定します。
#           - BUNDLER_VERSION: 2.1.4
# #  ②注意！！ circleCIは仮想環境を構築するので、そのときに使うデータベースを指定する必要があります。
#           - RAILS_ENV: 'test'

#       - image: circleci/mysql:5.6
#         environment:
#           - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
#           - MYSQL_ROOT_HOST: '%'

commands:  
  setup:  
    steps:  
      - checkout  
      - run:  
          name: Update bundler # bundlerのバージョン２へのアップデート  
          command: gem update bundler  

      - run:  
          name: Which bundler? # バージョン確認  
          command: bundle -v  

      - restore_cache: # キャッシュを読み込む  
          keys:  
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}  
            - gem-cache-v1-  

      - run:  
          name: Bundle Install  
          command: bundle config set path 'vendor/bundle' || bundle install --deployment

      - save_cache: # キャッシュを保存する  
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}  
          paths:  
            - vendor/bundle  
      
      # 以下はRails6でWebpackerを使う場合は必須   
      - restore_cache:  
          keys:  
            - yarn-cache-v1-{{ checksum "yarn.lock" }}  
            - yarn-cache-v1-  

      - run:  
          name: Yarn Install  
          command: yarn install --cache-folder ~/.cache/yarn  

      - save_cache:  
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}  
          paths:  
            - ~/.cache/yarn  

    # working_directory: ~/repo
    # steps:
      # - checkout
      # Download and cache dependencies
      # - restore_cache:
          # keys:
            # - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            # - v1-dependencies-

      # - run:
          # name: install dependencies
          # command: |
            # gem install bundler -v 2.1.4
            # bundle install --jobs=4 --retry=3 --path vendor/bundle

      # - save_cache:
          # paths:
            # - ./vendor/bundle
          # key: v1-dependencies-{{ checksum "Gemfile.lock" }}

# ②ちょっと無理やりですが、database.ymlとdatabase.yml.ciを入れ替える記述です。
      # - run: mv config/database.yml.ci config/database.yml 

      # Database setup
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

# rubocopを走らせる記述です。
      - run:
          name: Rubocop
          command: bundle exec rubocop -a

# rspecを走らせる記述です。
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      
      - add_ssh_keys:
          fingerprints:
            - "54:3d:77:be:0d:b3:9f:cf:5b:30:7d:08:d0:3b:b3:a1"
      - deploy:
          name: Capistrano deploy
          command:
            bundle exec cap production deploy

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master