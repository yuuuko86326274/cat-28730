version: 2.1
jobs:
  test:
    machine:
      image: circleci/classic:edge
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-Linux-x86_64 > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      # - run: env > ~/.env
      - run: 
          command: |
            echo AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} > ~/.env
            echo AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} >> ~/.env
            echo SECRET_KEY_BASE=${SECRET_KEY_BASE} >> ~/.env
            echo PAYJP_PUBLIC_KEY={PAYJP_PUBLIC_KEY} >> ~/.env
            echo PAYJP_SECRET_KEY={PAYJP_SECRET_KEY} >> ~/.env
      # - run:
      #     name: docker-compose up --build -d
      #     command: 
      #       docker-compose up --build -d
      # - run:
      #     name: docker-compose stop
      #     command: |
      #       set -x
      #       docker-compose stop
      # - run:
      #     name: docker-compose up
      #     command: |
      #       set -x
      #       docker-compose up -d
      # - run:
      #     name: rubocop
      #     command: |
      #       docker-compose exec app bin/bundle exec rubocop -a
      # - run:
      #     name: test
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob 'spec/**/*_spec.rb' | circleci tests split --split-by=timings)"
      #       docker-compose exec app bin/rspec --format progress \
      #                                                             --format RspecJunitFormatter \
      #                                                             --out /tmp/test-results/rspec.xml \
      #                                                             $TEST_FILES
      # - run:
      #     name: docker-compose down
      #     command: docker-compose down
      - run:
          name: docker-compose up --build -d
          command: docker-compose up --build -d
      - run: sleep 30
      - run:
          name: docker-compose exec app rubocop
          command: docker-compose exec app rubocop
      # - run:
      #     name: docker-compose exec app rails db:create
      #     command: docker-compose exec app rails db:create
      # - run:
      #     name: docker-compose exec app rails db:migrate
      #     command: docker-compose exec app rails db:migrate
      # - run:
      #     name: docker-compose exec app bash -c "yes n | rails webpacker:install"
      #     command: docker-compose exec app bash -c "yes n | rails webpacker:install"
      # - run:
      #     name: docker-compose exec app rails webpacker:compile RAILS_ENV=test
      #     command: docker-compose exec app rails webpacker:compile RAILS_ENV=test
      - run:
          name: docker-compose exec app rspec
          command: docker-compose exec app rspec
      - run:
          name: docker-compose down
          command: docker-compose down

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@1.1.0

workflows:
  build_and_test:  
    jobs:  
      - test
  # Nginxのデプロイ
  # nginx-deploy:
  #   jobs:
  #     - aws-ecr/build-and-push-image:
  #         account-url: AWS_ECR_ACCOUNT_URL
  #         region: AWS_REGION
  #         aws-access-key-id: AWS_ACCESS_KEY_ID
  #         aws-secret-access-key: AWS_SECRET_ACCESS_KEY
  #         create-repo: true
  #         dockerfile: ./docker/nginx/Dockerfile
  #         repo: nginx
  #         tag: "${CIRCLE_SHA1}"
  #         filters:
  #           branches:
  #             only: master
  #     - aws-ecs/deploy-service-update:
  #         requires:
  #           - aws-ecr/build-and-push-image
  #         family: 'Task01' # ECSのタスク定義名
  #         cluster-name: 'arn:aws:ecs:ap-northeast-1:308853228710:cluster/Cluster01'  #ECSのクラスターのARN
  #         service-name: 'ecs-rails-service'  #サービス名
  #         container-image-name-updates: "container=nginx,tag=${CIRCLE_SHA1}"
  # # Railsのデプロイ
  # rails-deploy:
  #   jobs:
  #     - aws-ecr/build-and-push-image:
  #         account-url: AWS_ECR_ACCOUNT_URL
  #         region: AWS_REGION
  #         aws-access-key-id: AWS_ACCESS_KEY_ID
  #         aws-secret-access-key: AWS_SECRET_ACCESS_KEY
  #         create-repo: true
  #         dockerfile: ./docker/rails/Dockerfile
  #         repo: app
  #         tag: "${CIRCLE_SHA1}"
  #         filters:
  #           branches:
  #             only: master
  #     - aws-ecs/deploy-service-update:
  #         requires:
  #           - aws-ecr/build-and-push-image
  #         family: 'Task01' # ECSのタスク定義名
  #         cluster-name: 'arn:aws:ecs:ap-northeast-1:308853228710:cluster/Cluster01' #ECSのクラスターのARN
  #         service-name: 'ecs-rails-service' #サービス名
  #         container-image-name-updates: "container=app,tag=${CIRCLE_SHA1}"
