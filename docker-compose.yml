version: '3'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: dockerize -wait tcp://db:3306 -timeout 20s bundle exec unicorn -p 3000 -c /myproject/config/unicorn.rb
    tty: true 
    # env_file:
    #   - .env
    # environment:
    #   - AWS_SECRET_ACCESS_KEY: ${DOCKER_AWS_SECRET_ACCESS_KEY}
    #   - AWS_ACCESS_KEY_ID: ${DOCKER_AWS_ACCESS_KEY_ID}
    #   - PAYJP_PUBLIC_KEY: ${DOCKER_PAYJP_PUBLIC_KEY}
    #   - PAYJP_SECRET_KEY: ${DOCKER_PAYJP_SECRET_KEY}
    stdin_open: true
    depends_on:
      - db
    ports:
      - 3000:3000
    restart: always
    volumes:
      - .:/myproject:cached 
      #ソケット通信用ファイルをnginxコンテナと共有
      - tmp-data:/myproject/tmp/sockets
      #画像データとかをnginxと共有
      - public-data:/myproject/public

  db:
    image: mysql:5.6
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports: 
      - 4306:3306
    environment:
      MYSQL_DATABASE: cat_28730_development
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
  
      # Docker内部でテスト用のデータベースが必要になるので記述
  test-db:
    image: mysql:5.6
    ports:
      - 4307:3306
    environment:
      MYSQL_DATABASE: cat_28730_test
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    restart: always

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    restart: always
    volumes:
      - tmp-data:/myproject/tmp/sockets
      - public-data:/myproject/public
    depends_on:
      - web 

volumes:
  public-data:
  tmp-data:
  mysql-data: